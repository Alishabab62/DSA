/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseBetween(ListNode* head, int left, int right) {
        if(head->next == NULL || left== right) return head;
        ListNode * dummy = new ListNode(10);
        dummy->next = head;

        ListNode * prev = dummy;
        ListNode * curr = head;


        for(int i = 0;i<left-1;i++){
            prev = prev->next;
            curr = curr->next;
        }
        
        ListNode * leftNode = prev; 
        ListNode * middle = curr;
        

        for(int i =0;i<=right-left;i++){
            ListNode * temp = curr->next;
            curr->next = prev;
            prev = curr;
            curr = temp;
            
        }
        middle->next = curr;
        leftNode ->next = prev;

        return dummy->next;
    }
};