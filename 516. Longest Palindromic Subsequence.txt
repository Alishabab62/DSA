class Solution {
public:
    int solveUsingTabulation(string &text1, string &text2){
        
            int s1 = text1.length();
            int s2 = text2.length();
            vector<vector<int>>dp(s1+1,vector<int>(s2+1,0));

            for(int i = s1-1 ; i>=0;i--){
                int ans = 0;
                for(int j = s2-1;j>=0;j--){
                    if(text1[i] == text2[j]){
                        ans = 1 + dp[i+1][j+1];
                    }
                    else{
                        ans = 0 + max(dp[i][j+1],dp[i+1][j]);
                    }
                    dp[i][j] = ans;
                }

            }
            return dp[0][0];
        }
    int longestPalindromeSubseq(string s) {
        string str = s;
        reverse(str.begin(),str.end());
        return solveUsingTabulation(s,str);
    }
};