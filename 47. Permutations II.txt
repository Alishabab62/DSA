class Solution {
public:
    void solve(vector<int>& nums,vector<vector<int>>&ans,int index){
        if(index == nums.size()){
            ans.push_back(nums);
            return;
        }
        // unordered_map<int,bool>visited;
        for(int i = index;i<nums.size();i++){
            // if(visited.find(nums[i]) != visited.end()){
            //     continue;
            // }
            // visited[nums[i]] = true;
            swap(nums[index],nums[i]);
            solve(nums,ans,index+1);
            swap(nums[index],nums[i]);
        }
    }
    vector<vector<int>> permuteUnique(vector<int>& nums) {
        vector<vector<int>>ans;
        set<vector<int>>st;
        solve(nums,ans,0);
        for(auto a:ans){
            st.insert(a);
        }
        ans.clear();
        for(auto s:st){
            ans.push_back(s);
        }
        return ans;
    }
};