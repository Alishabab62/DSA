/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
        void getSum(TreeNode* root, int targetSum, vector<vector<int>> &ans,vector<int>temp,int sum){
            if(root == nullptr){
                return;
            }
            temp.push_back(root->val);
            sum+=root->val;
            if(root -> left == nullptr && root -> right == nullptr){
                if(targetSum == sum){
                    ans.push_back(temp);
                }
                else{
                    return;
                }
            }
            getSum(root->left,targetSum,ans,temp,sum);
            getSum(root->right,targetSum,ans,temp,sum);

           
        }
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        vector<vector<int>>ans;
        vector<int>temp;
        int sum = 0;
        getSum(root,targetSum,ans,temp,sum);
        return ans;
    }
};