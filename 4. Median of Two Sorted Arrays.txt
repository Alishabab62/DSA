class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        // vector<int>temp;
        // int i = 0; 
        // int j = 0;
        // int s1 = nums1.size();
        // int s2 = nums2.size();

        // while(i<s1 && j<s2){
        //     if(nums1[i] < nums2[j]){
        //         temp.push_back(nums1[i++]);
        //     }
        //     else{
        //         temp.push_back(nums2[j++]);
        //     }
        // }

        // while(i<s1){
        //     temp.push_back(nums1[i++]);
        // }

        // while(j<s2){
        //     temp.push_back(nums2[j++]);
        // }

        // int size = temp.size();
        // if(size % 2 == 1){
        //     return temp[size/2];
        // }
        // else{
        //     int t = size/2;
        //     float ans = float(temp[t-1] + temp[t])/float(2);
        //     return ans;
        // }

        int i = 0; 
        int j = 0;
        int s1 = nums1.size();
        int s2 = nums2.size();
        int ind1 = (s1+s2)/2;
        int ind2 = ind1-1;
        int count = 0;
        int ele1;
        int ele2;

        while(i<s1 && j<s2){
            if(nums1[i] < nums2[j]){
                if(count == ind1) ele1 = nums1[i];
                if(count == ind2) ele2 = nums1[i];
                count++;
                i++;
            }
            else{
                if(count == ind1) ele1 = nums2[j];
                if(count == ind2) ele2 = nums2[j];
                count++;
                j++;
            }
        }

        while(i<s1){
            if(count == ind1) ele1 = nums1[i];
            if(count == ind2) ele2 = nums1[i];
            count++;
            i++;
        }

        while(j<s2){
            if(count == ind1) ele1 = nums2[j];
            if(count == ind2) ele2 = nums2[j];
            count++;
            j++;
        }
        int size = s1+s2;
        if(size % 2 == 1){
            return ele1;
        }
        else{
            float ans = float(ele1+ele2)/float(2);
            return ans;
        }
    }
};