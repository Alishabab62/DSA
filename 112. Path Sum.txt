/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool getSum(TreeNode* root, int targetSum,int sum){
        if(root == nullptr){
            return false;
        }
        sum+=root->val;
        if(root -> left == nullptr && root -> right == nullptr){
            if(targetSum == sum){
                return true;
            }
            else{
                return false;
            }
        }
        bool left = getSum(root->left,targetSum,sum);
        bool right = getSum(root->right,targetSum,sum);
        return left || right;
    }
    bool hasPathSum(TreeNode* root, int targetSum) {
        int sum = 0;
        bool ans = getSum(root,targetSum,sum);
        return ans;
    }
};