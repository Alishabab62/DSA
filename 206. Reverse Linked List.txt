/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseListRecursion(ListNode* prev,ListNode* curr){
        if(curr == nullptr){
            return prev;
        }
            ListNode * temp = curr->next;
            curr->next = prev;
            prev = curr;
            curr = temp;
            return reverseListRecursion(prev,curr);
    } 
    ListNode* reverseList(ListNode* head) {
        ListNode * prev = nullptr;
        ListNode * curr = head;

        // while(curr != nullptr){
        //     ListNode * temp = curr->next;
        //     curr->next = prev;
        //     prev = curr;
        //     curr = temp;
        // }
        // return prev;

        return reverseListRecursion(prev,curr);
    }
};