class Solution {
public:
    int findProfit(vector<int>& prices,int maxValue,int& profit,int index){
        if(index<0){
            return profit;
        }
        maxValue = max(maxValue,prices[index]);
        profit = max(profit,maxValue - prices[index]);
        int ans = findProfit(prices,maxValue,profit,index-1);
        return ans;
    }
    
    int maxProfit(vector<int>& prices) {

        //tle 

        // int profit = 0;
        // int size = prices.size();
        // for(int i = size-1;i>=0;i--){
        //     for(int j = i-1;j>=0;j--){
        //         int diff = prices[i] - prices[j];
        //         if(diff > profit){
        //             profit = diff;
        //         }
        //     }
        // }
        // if(profit < 0){
        //     return 0;
        // }
        // return profit;


        // int profit = 0;
        // int size = prices.size();
        // int maxValue = prices[size-1];
        // for(int i = size-1;i>=0;i--){
        //     maxValue = max(maxValue,prices[i]);
        //     profit = max(profit,maxValue - prices[i]);
        // }
        // return profit;
        
        
        int profit = 0;
        int index = prices.size();
        int maxValue = prices[index-1];
        
        int ans = findProfit(prices,maxValue,profit,index-1);
        return ans;
    }
};