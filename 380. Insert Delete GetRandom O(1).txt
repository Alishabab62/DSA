class RandomizedSet {
public:
    set<int>st;
    RandomizedSet() {
        
    }
    
    bool insert(int val) {
        auto it = st.find(val);
        if (it != st.end()) {
            return false;
        } else {   
            st.insert(val);
            return true;
        }
    }
    
    bool remove(int val) {
        auto it = st.find(val);
        if (it != st.end()) {
            st.erase (it);
            return true;
        } else {
            return false;
        }
    }
    
    int getRandom() {
        int size = st.size();
        int randomIndex = rand() % size;
        auto it = st.begin();
        std::advance(it, randomIndex);
        return *it;
    }
};

/**
 * Your RandomizedSet object will be instantiated and called as such:
 * RandomizedSet* obj = new RandomizedSet();
 * bool param_1 = obj->insert(val);
 * bool param_2 = obj->remove(val);
 * int param_3 = obj->getRandom();
 */